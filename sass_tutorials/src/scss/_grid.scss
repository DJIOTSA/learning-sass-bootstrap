@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
    "4": 40px,
    "5": 50px,
);

// justify list (list in sass)
$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout classes
.container {
    width: 100%;
    max-width: 1200px;
    margin:  0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}
.row {
    display: flex;
    flex-flow: row wrap;
};

// grip gaps
@each $key, $val in $grid-gaps{
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key}{
        // delete the padding at left and at the right
        margin-left: -$val;
        margin-right: -$val;
    }
};

// justify content gaps
@each $val in $layout-values {
    .justify-#{value} {
        justify-content: $val;
    }
};

// col class
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

// col class
@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

// col class
@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

// col class
@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

// col class
@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}
